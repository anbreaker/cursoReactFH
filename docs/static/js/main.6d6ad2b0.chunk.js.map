{"version":3,"sources":["components/AddCategory.js","components/helpers/getFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","components/hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","event","preventDefault","trim","length","categories","type","value","onChange","target","placeholder","getFetchGifs","category","a","process","url","encodeURI","fetch","response","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAe9C,OACE,0BAAMC,SATa,SAACC,GACpBA,EAAMC,iBACFJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAAgCO,OAC9CN,EAAc,OAMd,2BACEO,KAAK,OACLC,MAAOT,EACPU,SAjBoB,SAACP,GACzBF,EAAcE,EAAMQ,OAAOF,QAiBvBG,YAAY,a,uBCxBPC,EAAY,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACXC,mCACTC,EAFoB,uDACXD,mCADW,cAE8CE,UACtEJ,GAHwB,sBAKHK,MAAMF,GALH,cAKpBG,EALoB,gBAMLA,EAASC,OANJ,uBAMnBC,EANmB,EAMnBA,KAEDC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZZ,kBAgBnBM,GAhBmB,4CAAH,sDCEZO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAClC,OACE,yBAAKc,UAAU,0CACb,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFGO,EAAU,SAAC,GAAgB,IAAfpB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACdf,mBAAS,CAACuB,KAAM,GAAIa,SAAS,IADf,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OAXAC,qBAAU,WACRzB,EAAaC,GAAUyB,MAAK,SAACC,GAC3BC,YAAW,WACTJ,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAEJ,CAACrB,IAEGsB,EDZyBM,CAAa5B,GAAhCc,EADwB,EAC9BN,KAAca,EADgB,EAChBA,QAErB,OACE,oCACE,wBAAIJ,UAAU,qCAAqCjB,GAElDqB,GAAW,uBAAGJ,UAAU,oCAAb,cACZ,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAakB,IAAKlB,EAAIC,IAAQD,UEUzBmB,EAlBM,WAAO,IAAD,EACW7C,mBAAS,CAAC,gBADrB,mBAClBQ,EADkB,KACNT,EADM,KAGzB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACGS,EAAWiB,KAAI,SAACV,GACf,OAAO,kBAAC,EAAD,CAAS6B,IAAK7B,EAAUA,SAAUA,U,MCZnD+B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.6d6ad2b0.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n  const [inputValue, setinputValue] = useState('');\n\n  const handleInputChange = (event) => {\n    setinputValue(event.target.value);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (inputValue.trim().length > 2) {\n      setCategories((categories) => [inputValue, ...categories]);\n      setinputValue('');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input\n        type='text'\n        value={inputValue}\n        onChange={handleInputChange}\n        placeholder='Search'\n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","export const getFetchGifs = async (category) => {\n  const apiKey = process.env.REACT_APP_API_KEY;\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${encodeURI(\n    category\n  )}&limit=10`;\n  const response = await fetch(url);\n  const {data} = await response.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n\n  return gifs;\n};\n","import React from 'react';\n\nexport const GifGridItem = ({title, url}) => {\n  return (\n    <div className='card animate__animated animate__fadeIn'>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n","import React from 'react';\nimport {useFetchGifs} from './hooks/useFetchGifs';\nimport {GifGridItem} from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n  const {data: images, loading} = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n\n      {loading && <p className='animate__animated animate__flash'>Loading...</p>}\n      <div className='card-grid'>\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import {useState, useEffect} from 'react';\nimport {getFetchGifs} from '../helpers/getFetchGifs';\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({data: [], loading: true});\n\n  useEffect(() => {\n    getFetchGifs(category).then((imgs) => {\n      setTimeout(() => {\n        setState({\n          data: imgs,\n          loading: false,\n        });\n      }, 500);\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, {useState} from 'react';\nimport {AddCategory} from './components/AddCategory';\nimport {GifGrid} from './components/GifGrid';\n\n// Functional Component\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState(['Dragon Ball']);\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category) => {\n          return <GifGrid key={category} category={category} />;\n        })}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}